(window.webpackJsonp=window.webpackJsonp||[]).push([[333],{1427:function(s,a,e){"use strict";e.r(a);var t=e(4),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("[TOC]")]),s._v(" "),e("h1",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),e("h1",{attrs:{id:"一、环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、环境变量"}},[s._v("#")]),s._v(" 一、环境变量")]),s._v(" "),e("h2",{attrs:{id:"_1-什么是环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是环境变量"}},[s._v("#")]),s._v(" 1.什么是环境变量")]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v("bash shell")]),s._v(" 用一个叫作环境变量（"),e("code",[s._v("environment variable")]),s._v("）的特性来存储有关 shell 会话和工作环境的信息")])]),s._v(" "),e("p",[s._v("在 "),e("code",[s._v("bash shell")]),s._v(" 中，环境变量分为两类：")]),s._v(" "),e("ul",[e("li",[s._v("全局变量： 对于shell会话和所有生成的子shell都是可见的")]),s._v(" "),e("li",[s._v("局部变量： 只对创建它们的shell可见")])]),s._v(" "),e("h3",{attrs:{id:"_1-1-查看全局变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-查看全局变量"}},[s._v("#")]),s._v(" 1.1 查看全局变量")]),s._v(" "),e("p",[s._v("Linux系统在你开始bash会话时就设置了一些全局环境变量。")]),s._v(" "),e("p",[s._v("系统环境变量基本上都是使用"),e("strong",[s._v("全大写字母")]),s._v("，以区别于普通用户的环境变量。")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v("  \t\t\t "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出全部环境变量")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("printenv")]),s._v(" HMOE\t "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出全部环境变量 / 输出指定环境变量的值")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出指定环境变量的值。注：$变量名可作为命令行参数")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"_1-2-查看局部环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-查看局部环境变量"}},[s._v("#")]),s._v(" 1.2 查看局部环境变量")]),s._v(" "),e("p",[s._v("局部环境变量只能在定义它们的进程中可见")]),s._v(" "),e("p",[s._v("set命令会显示为某个特定进程设置的所有环境变量，包括局部变量、全局变量以及用户定义变量。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("set \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"_2-设置用户定义变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-设置用户定义变量"}},[s._v("#")]),s._v(" 2.设置用户定义变量")]),s._v(" "),e("h3",{attrs:{id:"_2-1-设置局部用户定义变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-设置局部用户定义变量"}},[s._v("#")]),s._v(" 2.1 设置局部用户定义变量")]),s._v(" "),e("blockquote",[e("ul",[e("li",[s._v("一旦启动了bashshell（或者执行一个shell脚本），就能创建在这个shell进程内可见的局部变量了。")]),s._v(" "),e("li",[s._v("可以通过等号给环境变量赋值，值可以是数值或字符串。")])])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("my_variable")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Hello\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$my_variable")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("blockquote",[e("ul",[e("li",[s._v("系统环境变量要用大写字母，用户自定义的局部环境变量需用小写字母")]),s._v(" "),e("li",[s._v("变量名、等号和值之间没有空格")])])]),s._v(" "),e("p",[s._v("局部变量的生命周期：")]),s._v(" "),e("blockquote",[e("p",[s._v("局部环境变量仅在定义它们的当前进程中可用，在其子shell中不可用，在其父进程中也不可用")])]),s._v(" "),e("h3",{attrs:{id:"_2-2-设置全局环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-设置全局环境变量"}},[s._v("#")]),s._v(" 2.2 设置全局环境变量")]),s._v(" "),e("p",[s._v("生命周期：")]),s._v(" "),e("blockquote",[e("ul",[e("li",[s._v("在设定全局环境变量的进程所创建的子进程中，该变量都是可见的")])])]),s._v(" "),e("p",[s._v("创建全局环境变量的方法是先创建一个局部环境变量，然后再把它导出到全局环境中。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ my_variable "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" I am Global now"')]),s._v(" \n$ \n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" my_variable    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导出到全局环境中")]),s._v("\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $ my_variable \nI am Global now \n$ \n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用bash命令启动一个子shell")]),s._v("\n$ \n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("  my_variable \nI am Global now\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("blockquote",[e("p",[s._v("子shell可以重新定义变量，但无法使用export命令改变父shell中全局环境变量的值")])]),s._v(" "),e("h2",{attrs:{id:"_3-删除环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-删除环境变量"}},[s._v("#")]),s._v(" 3 删除环境变量")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$my_variable")]),s._v(" \nI am Global now \n$ \n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" my_variable      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除全局环境变量")]),s._v("\n$ \n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$my_variable")]),s._v(" \n\n$\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("blockquote",[e("ul",[e("li",[e("p",[s._v("如果要用到变量，使用$；如果要操作变量，不使用$")])]),s._v(" "),e("li",[e("p",[s._v("在子进程中删除全局环境变量，这只对子进程有效。该全局环境变量在父进程中依然可用。")])])])]),s._v(" "),e("h2",{attrs:{id:"_4-设置path环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-设置path环境变量"}},[s._v("#")]),s._v(" 4. 设置PATH环境变量")]),s._v(" "),e("blockquote",[e("p",[s._v("当你在shell命令行界面中输入一个外部命令时，shell必须搜索系统来找到对应的程序。")])]),s._v(" "),e("p",[s._v("PATH环境变量定义了用于进行命令和程序查找的目录。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/ray/.local/bin:/home/ray/bin\n$\n$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v(":/home/ray/Scripts   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过引用PATH变量的方式来追加PATH环境变量")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("blockquote",[e("p",[s._v("PATH中的目录使用冒号分隔")])]),s._v(" "),e("p",[s._v("通过命令行对PATH变量的修改，只能持续到退出或重启系统")]),s._v(" "),e("h2",{attrs:{id:"_5-环境变量持久化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-环境变量持久化"}},[s._v("#")]),s._v(" 5.环境变量持久化")]),s._v(" "),e("h3",{attrs:{id:"_5-1-启动文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-启动文件"}},[s._v("#")]),s._v(" 5.1 启动文件")]),s._v(" "),e("p",[s._v("启动文件或环境文件 :")]),s._v(" "),e("blockquote",[e("p",[s._v("在你登入Linux系统启动一个"),e("code",[s._v("bashshell")]),s._v("时，默认情况下bash会在几个文件中查找命令。这些文件叫作启动文件或环境文件。")])]),s._v(" "),e("p",[s._v("bash检查的启动文件取决于你启动bashshell的方式。启动bashshell有3种方式：")]),s._v(" "),e("blockquote",[e("ul",[e("li",[e("p",[s._v("登录时作为默认登录shell")])]),s._v(" "),e("li",[e("p",[s._v("作为非登录shell的交互式shell")])]),s._v(" "),e("li",[e("p",[s._v("作为运行脚本的非交互shell")])])])]),s._v(" "),e("h4",{attrs:{id:"_5-1-1-登录shell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-登录shell"}},[s._v("#")]),s._v(" 5.1.1 登录shell")]),s._v(" "),e("blockquote",[e("p",[s._v("当你登录Linux系统时，bashshell会作为登录shell启动。")])]),s._v(" "),e("p",[s._v("登录shell会从5个不同的启动文件里读取命令：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("/etc/profile")])]),s._v(" "),e("li",[e("code",[s._v("$HOME/.bash_profile")])]),s._v(" "),e("li",[e("code",[s._v("$HOME/.bashrc")])]),s._v(" "),e("li",[e("code",[s._v("$HOME/.bash_login")])]),s._v(" "),e("li",[e("code",[s._v("$HOME/.profile")])])]),s._v(" "),e("p",[s._v("（1）"),e("code",[s._v("/etc/profile")]),s._v(" 文 件")]),s._v(" "),e("p",[e("code",[s._v("/etc/profile")]),s._v("文件是 "),e("code",[s._v("bashshell")]),s._v(" 默认的的主启动文件。只要你登录了Linux系统，bash 就会执行 "),e("code",[s._v("/etc/profile")]),s._v(" 启动文件中的命令。")]),s._v(" "),e("blockquote",[e("p",[s._v("每个发行版的/etc/profile文件都有不同的设置和命令。")])]),s._v(" "),e("p",[s._v("（2）$HOME目录下的启动文件")]),s._v(" "),e("p",[s._v("提供一个用户专属的启动文件来定义该用户所用到的环境变量。")]),s._v(" "),e("blockquote",[e("p",[s._v("大多数Linux发行版只用这四个启动文件中的一到两个：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("$HOME/.bash_profile")])]),s._v(" "),e("li",[e("code",[s._v("$HOME/.bashrc")])]),s._v(" "),e("li",[e("code",[s._v("$HOME/.bash_login")])]),s._v(" "),e("li",[e("code",[s._v("$HOME/.profile")])])]),s._v(" "),e("p",[s._v("这四个文件都以点号开头，这说明它们是隐藏文件。")])]),s._v(" "),e("p",[s._v("shell会按照按照下列顺序，运行第一个被找到的文件，余下的则被忽略：")]),s._v(" "),e("blockquote",[e("ul",[e("li",[e("p",[s._v("$HOME/.bash_profile")])]),s._v(" "),e("li",[e("p",[s._v("$HOME/.bash_login")])]),s._v(" "),e("li",[e("p",[s._v("$HOME/.profile")])])]),s._v(" "),e("p",[s._v("这个列表中并没有$HOME/.bashrc文件。这是因为该文件通常通过其他文件运行的。")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ray@localhost ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.bash_profile\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .bash_profile")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Get the aliases and functions")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f ~/.bashrc "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n\t"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" ~/.bashrc\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# User specific environment and startup programs")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.local/bin:"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/bin\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ray@localhost ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ \n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("code",[s._v(".bash_profile")]),s._v("启动文件会先去检查HOME目录中是不是还有一个叫"),e("code",[s._v(".bashrc")]),s._v("的启动文件。如果有的话，会先执行启动文件里面的命令。")]),s._v(" "),e("h4",{attrs:{id:"_5-1-2-交互式shell进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-交互式shell进程"}},[s._v("#")]),s._v(" 5.1.2 交互式shell进程")]),s._v(" "),e("p",[s._v("交互式shell：")]),s._v(" "),e("blockquote",[e("p",[s._v("如果你的"),e("code",[s._v("bashshell")]),s._v("不是登录系统时启动的（比如是在命令行提示符下敲入bash时启动），那么你启动的shell叫作交互式shell。")])]),s._v(" "),e("p",[s._v("如果bash是作为交互式shell启动的，它就不会访问 "),e("code",[s._v("/etc/profile")]),s._v(" 文件，只会检查用户HOME目录中的 "),e("code",[s._v(".bashrc")]),s._v(" 文件。")]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v(".bashrc")]),s._v("文件有两个作用：一是查看 /etc 目录下通用的"),e("code",[s._v("bashrc")]),s._v("文件，二是为用户提供一个定制自己的命令别名 和私有脚本函数的地方。")])]),s._v(" "),e("h4",{attrs:{id:"_5-1-3-非交互式shell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-3-非交互式shell"}},[s._v("#")]),s._v(" 5.1.3 非交互式shell")]),s._v(" "),e("blockquote",[e("p",[s._v("系统执行shell脚本时用的就是这种shell。不同的地方在于它没有命令行提示符。但是当你在系统上运行脚本时，也许希望能够运行一些特定启动的命令。")])]),s._v(" "),e("p",[s._v("BASH_ENV环境变量：")]),s._v(" "),e("blockquote",[e("p",[s._v("为了处理这种情况，bashshell提供了BASH_ENV环境变量。当shell启动一个非交互式shell进程时，它会检查这个环境变量来查看要执行的启动文件。如果有指定的文件，shell会执行该文件里的命令，这通常包括shell脚本变量设置。")])]),s._v(" "),e("h3",{attrs:{id:"_5-2-环境变量持久化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-环境变量持久化"}},[s._v("#")]),s._v(" 5.2 环境变量持久化")]),s._v(" "),e("p",[s._v("通过我们通过命令行对修改了环境变量，这种修改只能持续到退出或重启系统。")]),s._v(" "),e("p",[s._v("环境变量持久化修改，可通过如下方式：")]),s._v(" "),e("ul",[e("li",[s._v("修改 "),e("code",[s._v("/etc/profile")])]),s._v(" "),e("li",[s._v("修改 "),e("code",[s._v("/etc/profile.d")])])]),s._v(" "),e("h4",{attrs:{id:"_5-2-1-修改-etc-profile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-修改-etc-profile"}},[s._v("#")]),s._v(" 5.2.1 修改 "),e("code",[s._v("/etc/profile")])]),s._v(" "),e("p",[s._v("对全局环境变量来说（Linux系统中所有用户都需要使用的变量），可能更倾向于"),e("strong",[s._v("将新的或修改过的变量设置放在/etc/profile文件中")]),s._v("，但这可不是什么好主意。如果你升级了所用的发行版，这个文件也会跟着更新，那你所有定制过的变量设置可就都没有了。")]),s._v(" "),e("h4",{attrs:{id:"_5-2-2-修改-etc-profile-d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-修改-etc-profile-d"}},[s._v("#")]),s._v(" 5.2.2 修改 "),e("code",[s._v("/etc/profile.d")])]),s._v(" "),e("p",[s._v("最好是在 "),e("code",[s._v("/etc/profile.d")]),s._v(" 目录中创建一个以.sh结尾的文件。把所有新的或修改过的全局环境变量设置放在这个文件中。")]),s._v(" "),e("p",[s._v("（1）与修改 "),e("code",[s._v("/etc/profile")]),s._v("的区别")]),s._v(" "),e("p",[s._v("通过查看  "),e("code",[s._v("/etc/profile")]),s._v(" 文件，我们会发现文件中包含如下语句:")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 遍历 /etc/profile.d/*.sh 文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" /etc/profile.d/*.sh /etc/profile.d/sh.local "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -r "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${-"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("*i}")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$-"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" \n            "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v('"')]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n            "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("因此，我们可以发现其实两种方式的实现效果都一样，但是通过 "),e("code",[s._v("/etc/profile.d")]),s._v(" 来设置会更好维护。")]),s._v(" "),e("p",[s._v("（2）如何设置环境变量")]),s._v(" "),e("p",[s._v("比如要设置 "),e("code",[s._v("Java")]),s._v("的环境变量：")]),s._v(" "),e("ul",[e("li",[s._v("在 "),e("code",[s._v("/etc/profile.d")]),s._v(" 目录下创建 java.sh文件")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/profile.d/java.sh\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("文件内容如下：")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# java env")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAVA_HOME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/jdk1.8.0_192\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$JAVA_HOME")]),s._v("/bin:"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);