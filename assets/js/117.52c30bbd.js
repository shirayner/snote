(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{1167:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("[TOC]")]),t._v(" "),n("h1",{attrs:{id:"一、前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),n("h1",{attrs:{id:"二、基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、基本概念"}},[t._v("#")]),t._v(" 二、基本概念")]),t._v(" "),n("p",[t._v("策略模式（Strategy Pattern）是一种比较简单的模式，也叫做政策模式（Policy Pattern）。")]),t._v(" "),n("h2",{attrs:{id:"_1-定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义"}},[t._v("#")]),t._v(" 1.定义")]),t._v(" "),n("p",[t._v("定义一组算法，将每个算法都封装起来，并且使它们之间可以互换。")]),t._v(" "),n("blockquote",[n("p",[t._v("Define a family of algorithms, encapsulate each one, and make them interchangeable.")])]),t._v(" "),n("h2",{attrs:{id:"_2-适用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-适用场景"}},[t._v("#")]),t._v(" 2.适用场景")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("多个类只有在算法或行为上稍有不同的场景。")])]),t._v(" "),n("li",[n("p",[t._v("算法需要自由切换的场景。")])]),t._v(" "),n("li",[n("p",[t._v("需要屏蔽算法规则的场景。")])])]),t._v(" "),n("p",[t._v("注意事项：")]),t._v(" "),n("blockquote",[n("p",[t._v("如果系统中的一个策略家族的具体策略"),n("u",[n("em",[n("strong",[t._v("数量超过4个")])])]),t._v("，则需要考虑使用混合模式，解决策略类膨胀和对外暴露的问题，否则日后的系统维护就会成为一个烫手山芋，谁都不想接。")])]),t._v(" "),n("h2",{attrs:{id:"_3-优劣"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-优劣"}},[t._v("#")]),t._v(" 3.优劣")]),t._v(" "),n("h3",{attrs:{id:"_3-1-优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-优点"}},[t._v("#")]),t._v(" 3.1 优点")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("算法可以自由切换")])]),t._v(" "),n("li",[n("p",[t._v("避免使用多重条件判断")])]),t._v(" "),n("li",[n("p",[t._v("扩展性良好")])])]),t._v(" "),n("h3",{attrs:{id:"_3-2-缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-缺点"}},[t._v("#")]),t._v(" 3.2 缺点")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("策略类数量增多")])]),t._v(" "),n("li",[n("p",[t._v("所有的策略类都需要对外暴露")])])]),t._v(" "),n("blockquote",[n("p",[t._v("上层模块必须知道有哪些策略，然后才能决定使用哪一个策略，这与迪米特法则是相违背的，我只是想使用了一个策略，我凭什么就要了解这个策略呢？那要你的封装类还有什么意义？这是原装策略模式的一个缺点，幸运的是，"),n("strong",[t._v("我们可以使用其他模式来修正这个缺陷，如工厂方法模式、代理模式或享元模式")]),t._v("。")])]),t._v(" "),n("h2",{attrs:{id:"_4-登场角色"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-登场角色"}},[t._v("#")]),t._v(" 4.登场角色")]),t._v(" "),n("p",[n("img",{attrs:{src:a(573),alt:"1542894058650"}})]),t._v(" "),n("p",[t._v("策略模式使用的就是面向对象的继承和多态机制。")]),t._v(" "),n("h3",{attrs:{id:"_4-1-context-封装角色"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-context-封装角色"}},[t._v("#")]),t._v(" 4.1 Context（封装角色）")]),t._v(" "),n("p",[t._v("也叫做上下文角色，起承上启下封装作用，屏蔽高层模块对策略、算法的直接访问，封装可能存在的变化。")]),t._v(" "),n("h3",{attrs:{id:"_4-2-strategy-抽象策略角色"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-strategy-抽象策略角色"}},[t._v("#")]),t._v(" 4.2 Strategy（抽象策略角色）")]),t._v(" "),n("p",[t._v("策略、算法家族的抽象，通常为接口，定义每个策略或算法必须具有的方法和属性。")]),t._v(" "),n("h3",{attrs:{id:"_4-3-concretestrategy-具体策略角色"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-concretestrategy-具体策略角色"}},[t._v("#")]),t._v(" 4.3 ConcreteStrategy（具体策略角色）")]),t._v(" "),n("p",[t._v("实现抽象策略中的操作，该类含有具体的算法。")]),t._v(" "),n("h2",{attrs:{id:"_5-通用源码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-通用源码"}},[t._v("#")]),t._v(" 5.通用源码")]),t._v(" "),n("h3",{attrs:{id:"_5-1-strategy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-strategy"}},[t._v("#")]),t._v(" 5.1 Strategy")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Strategy")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//策略模式的运算法则")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h3",{attrs:{id:"_5-2-concretestrategy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-concretestrategy"}},[t._v("#")]),t._v(" 5.2 ConcreteStrategy")]),t._v(" "),n("ul",[n("li",[t._v("ConcreteStrategy1")])]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConcreteStrategy1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Strategy")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"具体策略1的运算法则"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("ul",[n("li",[t._v("ConcreteStrategy2")])]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConcreteStrategy2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Strategy")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"具体策略2的运算法则"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("h3",{attrs:{id:"_5-3-context"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-context"}},[t._v("#")]),t._v(" 5.3 Context")]),t._v(" "),n("p",[t._v("策略模式的重点就是封装角色，它是借用了代理模式的思路：")]),t._v(" "),n("blockquote",[n("p",[t._v("策略模式的封装角色和被封装的策略类不用是同一个接口，如果是同一个接口那就成为了代理模式。")])]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Context")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//抽象策略")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Strategy")]),t._v(" strategy "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造函数设置具体策略")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Context")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Strategy")]),t._v(" _strategy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strategy "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _strategy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   \n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//封装后的策略方法")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doAnythinig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strategy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br")])]),n("h1",{attrs:{id:"三、代码实例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、代码实例"}},[t._v("#")]),t._v(" 三、代码实例")]),t._v(" "),n("h1",{attrs:{id:"四、相关设计模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、相关设计模式"}},[t._v("#")]),t._v(" 四、相关设计模式")]),t._v(" "),n("h1",{attrs:{id:"五、源码分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五、源码分析"}},[t._v("#")]),t._v(" 五、源码分析")]),t._v(" "),n("h1",{attrs:{id:"六、参考资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六、参考资料"}},[t._v("#")]),t._v(" 六、参考资料")]),t._v(" "),n("ol",[n("li",[n("a",{attrs:{href:"https://github.com/CyC2018/CS-Notes/blob/master/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("CyC2018/CS-Notes"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/quanke/design-pattern-java-source-code",target:"_blank",rel:"noopener noreferrer"}},[t._v("quanke/design-pattern-java-source-code"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://design-patterns.readthedocs.io/zh_CN/latest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("图说设计模式"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://blog.csdn.net/wujunyucg/article/category/7301352/1",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解设计模式-CSDN-wujunyucg"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports},573:function(t,s,a){t.exports=a.p+"assets/img/1542894058650.0caf6e87.png"}}]);