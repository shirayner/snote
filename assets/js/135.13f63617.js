(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{1244:function(a,s,t){"use strict";t.r(s);var e=t(4),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("[TOC]")]),a._v(" "),e("h1",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),e("p",[a._v("使用 git 命令时，保持脑海里有这幅图")]),a._v(" "),e("p",[e("img",{attrs:{src:t(694),alt:"img "}})]),a._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"http://i.imgur.com/UB94Upo.png",target:"_blank",rel:"noopener noreferrer"}},[a._v("本图来源"),e("OutboundLink")],1)])]),a._v(" "),e("h1",{attrs:{id:"一、提交自己的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、提交自己的修改"}},[a._v("#")]),a._v(" 一、提交自己的修改")]),a._v(" "),e("p",[a._v("多人协作时，若自己的本地代码有了修改，想提交自己的代码，就需要按照以下步骤操作：")]),a._v(" "),e("ul",[e("li",[a._v("保存自己的修改")]),a._v(" "),e("li",[a._v("合并远程 "),e("code",[a._v("master")]),a._v(" 分支代码")]),a._v(" "),e("li",[a._v("提交修改到 "),e("code",[a._v("master")]),a._v(" 分支")])]),a._v(" "),e("h2",{attrs:{id:"_1-准备阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-准备阶段"}},[a._v("#")]),a._v(" 1.准备阶段")]),a._v(" "),e("p",[a._v("此阶段主要是将远程代码拉到自己本地，并切换到自己的分支上")]),a._v(" "),e("h3",{attrs:{id:"_1-1-拉取远程代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-拉取远程代码"}},[a._v("#")]),a._v(" 1.1 拉取远程代码")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"_1-2-切换到自己的分支上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-切换到自己的分支上"}},[a._v("#")]),a._v(" 1.2 切换到自己的分支上")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout myBranch\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("然后我们就可以在自己的分支上进行开发了")]),a._v(" "),e("h2",{attrs:{id:"_2-保存自己的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-保存自己的修改"}},[a._v("#")]),a._v(" 2.保存自己的修改")]),a._v(" "),e("p",[a._v("使用以下命令，查看有哪些是自己本次修改而未提交的代码")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("提交修改到远程自己的分支上")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" --all                 "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 提交至暂存区")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"提交的信息"')]),a._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 提交至本地仓库")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin myBranch      "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#提交至远程仓库")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("h2",{attrs:{id:"_3-合并远程-master-分支代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-合并远程-master-分支代码"}},[a._v("#")]),a._v(" 3.合并远程 "),e("code",[a._v("master")]),a._v(" 分支代码")]),a._v(" "),e("p",[a._v("使用如下命令，拉取远程 master 分支代码，并合并到本地当前分支上，这样就保证本地与远程"),e("code",[a._v("master")]),a._v("代码同步")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull origin master\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h2",{attrs:{id:"_4-提交修改到-master-分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-提交修改到-master-分支"}},[a._v("#")]),a._v(" 4.提交修改到 "),e("code",[a._v("master")]),a._v(" 分支")]),a._v(" "),e("p",[a._v("使用如下命令，将本地 "),e("code",[a._v("myBranch")]),a._v(" 分支的代码提交至远程"),e("code",[a._v("master")]),a._v("分支上，这样就保证了远程"),e("code",[a._v("master")]),a._v("分支与本地分支代码同步")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git push origin myBranch:master\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("至此远程"),e("code",[a._v("master")]),a._v("代码与本地当前分支代码一致了。")]),a._v(" "),e("h1",{attrs:{id:"三、放弃自己的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、放弃自己的修改"}},[a._v("#")]),a._v(" 三、放弃自己的修改")]),a._v(" "),e("h2",{attrs:{id:"_1-未使用-git-add-缓存代码时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-未使用-git-add-缓存代码时"}},[a._v("#")]),a._v(" 1.未使用 git add 缓存代码时")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git checkout -- filepathname    //  放弃某个文件\ngit checkout .                  // 放弃所有文件\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("git checkout . 用来放弃掉所有还没有加入到缓存区（就是 git add 命令）的修改：内容修改与整个文件删除。")]),a._v(" "),e("p",[a._v("但是此命令不会删除掉刚新建的文件。因为刚新建的文件还没已有加入到 git 的管理系统中。所以对于 git 是未知的。自己手动删除就好了")]),a._v(" "),e("h2",{attrs:{id:"_2-已经使用-git-add-缓存了代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-已经使用-git-add-缓存了代码"}},[a._v("#")]),a._v(" 2.已经使用 git add 缓存了代码")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git reset HEAD filepathname  // 放弃指定文件的缓存\ngit reset HEAD .    // 放弃所有文件的缓存\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("此命令用来清除 git 对于文件修改的缓存。相当于撤销 git add 命令所在的工作。")]),a._v(" "),e("p",[a._v("在使用本命令后，本地的修改并不会消失，而是回到了如（一）所示的状态。继续用（一）中的操作，就可以放弃本地的修改。")]),a._v(" "),e("h2",{attrs:{id:"_3-已经用-git-commit-提交了代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-已经用-git-commit-提交了代码"}},[a._v("#")]),a._v(" 3.已经用 git commit 提交了代码")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset --hard HEAD^    // 回退到上一次commit的状态\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset --hard  commitid   // 回退到任意版本\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("使用 git log 命令来查看 git 的提交历史，可以找到 commitid")]),a._v(" "),e("h2",{attrs:{id:"_4-放弃新建而没有被-git-管理的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-放弃新建而没有被-git-管理的文件"}},[a._v("#")]),a._v(" 4.放弃新建而没有被 git 管理的文件")]),a._v(" "),e("p",[a._v("删除当前目录下所有没有 track 过的文件. 不会删除.gitignore 文件里面指定的文件夹和文件, 不管这些文件有没有被 track 过")]),a._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean -f\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("git reset --hard 和 git clean -f 是一对好基友. 结合使用他们能让你的工作目录完全回退到最近一次 commit 的时候")]),a._v(" "),e("h1",{attrs:{id:"四、解决冲突"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、解决冲突"}},[a._v("#")]),a._v(" 四、解决冲突")]),a._v(" "),e("blockquote",[e("p",[a._v("开发过程中要时刻保持和远程 master 代码一致")])]),a._v(" "),e("p",[a._v("若拉取代码，或者推送代码时，提示有冲突（记住有冲突的文件），则可选择如下两种方法解决")]),a._v(" "),e("p",[a._v("（1）强制合并之后，一个一个解决（不推荐，自己百度）")]),a._v(" "),e("p",[a._v("（2）将自己的冲突文件（或自己所有修改过的文件）备份到任意一个地方，")]),a._v(" "),e("p",[a._v("然后将工作目录的代码回滚到和远程 master 相同（通常协作分支上才会有冲突，此过程请参考三），")]),a._v(" "),e("p",[a._v("然后将备份的冲突文件内容手动搬过来")]),a._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" HEAD     "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//此处为当前分支")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("6853e5f")]),a._v("f961e684d3a6c02d4d06183b5ff330dcc\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[e("code",[a._v("<<<<<<< HEAD 与 ====")]),a._v(" 之间的是 当前分支内容， "),e("code",[a._v("======= 与 >>>>>>> commitId")]),a._v(" 是别的分支的内容")])])}),[],!1,null,null,null);s.default=r.exports},694:function(a,s,t){a.exports=t.p+"assets/img/UB94Upo.eaf496a9.png"}}]);