(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{1163:function(t,e,a){"use strict";a.r(e);var r=a(4),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("[TOC]")]),t._v(" "),r("h1",{attrs:{id:"一、前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[t._v("#")]),t._v(" 一、前言")]),t._v(" "),r("h1",{attrs:{id:"二、基本概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、基本概念"}},[t._v("#")]),t._v(" 二、基本概念")]),t._v(" "),r("h2",{attrs:{id:"_1-定义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义"}},[t._v("#")]),t._v(" 1.定义")]),t._v(" "),r("p",[t._v("用一个中介对象封装一系列的对象交互，中介者使各对象不需要显示地相互作用，从而使其耦合松散，而且可以独立地改变它们之间的交互.")]),t._v(" "),r("blockquote",[r("p",[t._v("Define an object that encapsulates how a set of objects interact.Mediator promotes loose coupling by keeping objects from referring to each other explicitly, and it lets you vary their interaction independently.")])]),t._v(" "),r("h2",{attrs:{id:"_2-适用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-适用场景"}},[t._v("#")]),t._v(" 2.适用场景")]),t._v(" "),r("p",[t._v("中介者模式适用于"),r("strong",[t._v("多个对象之间紧密耦合")]),t._v("的情况，紧密耦合的标准是：在类图中出现了蜘蛛网状结构。")]),t._v(" "),r("p",[t._v("使用终结者模式可将蜘蛛网状结构梳理为星型结构。")]),t._v(" "),r("p",[t._v("实际例子:")]),t._v(" "),r("ul",[r("li",[t._v("机场调度中心")]),t._v(" "),r("li",[t._v("MVC")]),t._v(" "),r("li",[t._v("媒体网关")]),t._v(" "),r("li",[t._v("中介服务")])]),t._v(" "),r("h2",{attrs:{id:"_3-优劣"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-优劣"}},[t._v("#")]),t._v(" 3.优劣")]),t._v(" "),r("h3",{attrs:{id:"_3-1-优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-优点"}},[t._v("#")]),t._v(" 3.1 优点")]),t._v(" "),r("ul",[r("li",[t._v("减少类间的依赖")])]),t._v(" "),r("p",[t._v("把原有的一对多的依赖变成了一对一的依赖，同事类只依赖中介者，减少了依赖，当然同时也降低了类间的耦合。")]),t._v(" "),r("h3",{attrs:{id:"_3-2-缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-缺点"}},[t._v("#")]),t._v(" 3.2 缺点")]),t._v(" "),r("ul",[r("li",[t._v("中介者会膨胀得很大")])]),t._v(" "),r("p",[t._v("中介者模式的缺点就是中介者会膨胀得很大，而且逻辑复杂，原本N个对象直接的相互依赖关系转换为中介者和同事类的依赖关系，同事类越多，中介者的逻辑就越复杂。")]),t._v(" "),r("h2",{attrs:{id:"_4-登场角色"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-登场角色"}},[t._v("#")]),t._v(" 4.登场角色")]),t._v(" "),r("p",[r("img",{attrs:{src:a(569),alt:"1542718304932"}})]),t._v(" "),r("h3",{attrs:{id:"_4-1-mediator-抽象中介者"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-mediator-抽象中介者"}},[t._v("#")]),t._v(" 4.1 Mediator（抽象中介者）")]),t._v(" "),r("p",[t._v("负责定义与 Colleague 角色进行通信和做出决定的接口。")]),t._v(" "),r("blockquote",[r("p",[t._v("定义统一的接口，用于各同事角色之间的通信。")])]),t._v(" "),r("h3",{attrs:{id:"_4-2-concrete-mediator-具体中介者"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-concrete-mediator-具体中介者"}},[t._v("#")]),t._v(" 4.2 Concrete Mediator（具体中介者）")]),t._v(" "),r("p",[t._v("具体中介者 通过协调各同事角色实现协作行为，因此它必须依赖于各个同事角色。")]),t._v(" "),r("h3",{attrs:{id:"_4-3-colleague-同事"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-colleague-同事"}},[t._v("#")]),t._v(" 4.3 Colleague（同事）")]),t._v(" "),r("p",[t._v("负责定义与 Mediator 角色进行通信的接口。")]),t._v(" "),r("blockquote",[r("p",[t._v("每一个同事角色都知道中介者角色，而且与其他的同事角色通信的时候，一定要通过中介者角色协作。")])]),t._v(" "),r("h3",{attrs:{id:"_4-4-concrete-colleague-具体同事"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-concrete-colleague-具体同事"}},[t._v("#")]),t._v(" 4.4 Concrete Colleague（具体同事）")]),t._v(" "),r("p",[t._v("负责实现 Colleague 接口。")]),t._v(" "),r("h1",{attrs:{id:"三、代码实例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、代码实例"}},[t._v("#")]),t._v(" 三、代码实例")]),t._v(" "),r("h1",{attrs:{id:"四、相关设计模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四、相关设计模式"}},[t._v("#")]),t._v(" 四、相关设计模式")]),t._v(" "),r("h1",{attrs:{id:"五、源码分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五、源码分析"}},[t._v("#")]),t._v(" 五、源码分析")]),t._v(" "),r("h1",{attrs:{id:"六、参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六、参考资料"}},[t._v("#")]),t._v(" 六、参考资料")]),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://github.com/CyC2018/CS-Notes/blob/master/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("CyC2018/CS-Notes"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/quanke/design-pattern-java-source-code",target:"_blank",rel:"noopener noreferrer"}},[t._v("quanke/design-pattern-java-source-code"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://design-patterns.readthedocs.io/zh_CN/latest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("图说设计模式"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/wujunyucg/article/category/7301352/1",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解设计模式-CSDN-wujunyucg"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports},569:function(t,e,a){t.exports=a.p+"assets/img/1542718304932.3153cd1e.png"}}]);