(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{1194:function(t,s,a){"use strict";a.r(s);var r=a(4),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("[TOC]")]),t._v(" "),a("h1",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("MySQL支持多种数据类型，主要有数值类型、日期/时间类型、字符串类型和二进制类型：")]),t._v(" "),a("ul",[a("li",[t._v("数值类型：\n"),a("ul",[a("li",[t._v("整数类型：TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT")]),t._v(" "),a("li",[t._v("浮点小数类型：FLOAT和DOUBLE")]),t._v(" "),a("li",[t._v("定点小数类型：DECIMAL")])])]),t._v(" "),a("li",[t._v("日期/时间类型：包括YEAR、TIME、DATE、DATETIME和TIMESTAMP。")]),t._v(" "),a("li",[t._v("字符串类型：\n"),a("ul",[a("li",[t._v("文本字符串：包括CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET等。")]),t._v(" "),a("li",[t._v("二进制字符串：包括BIT、BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB和LONGBLOB。")])])])]),t._v(" "),a("h1",{attrs:{id:"一、数值类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、数值类型"}},[t._v("#")]),t._v(" 一、数值类型")]),t._v(" "),a("p",[t._v("MySQL提供多种数值数据类型，不同的数据类型提供的取值范围不同，可以存储的值的范围越大，其所需要的存储空间也就越大，因此要根据实际需求选择适合的数据类型。")]),t._v(" "),a("h2",{attrs:{id:"_1-整数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-整数类型"}},[t._v("#")]),t._v(" 1.整数类型")]),t._v(" "),a("p",[t._v("MySQL主要提供的整数类型有：TINYINT、SMALLINT、MEDIUMINT、INT（INTEGER）、BIGINT。")]),t._v(" "),a("p",[t._v("整数类型的字段属性可以添加 "),a("code",[t._v("AUTO_INCREMENT")]),t._v(" 自增约束条件。")]),t._v(" "),a("h3",{attrs:{id:"_1-1-内存大小与取值范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-内存大小与取值范围"}},[t._v("#")]),t._v(" 1.1 内存大小与取值范围")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/integer-types.html",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Table 11.1 Required Storage and Range for Integer Types Supported by MySQL")]),a("OutboundLink")],1)]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Storage (Bytes)")]),t._v(" "),a("th",[t._v("Minimum Value Signed")]),t._v(" "),a("th",[t._v("Minimum Value Unsigned")]),t._v(" "),a("th",[t._v("Maximum Value Signed")]),t._v(" "),a("th",[t._v("Maximum Value Unsigned")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("TINYINT")])]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("-128")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("127")]),t._v(" "),a("td",[t._v("255")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("SMALLINT")])]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("-32768")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("32767")]),t._v(" "),a("td",[t._v("65535")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("MEDIUMINT")])]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("-8388608")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("8388607")]),t._v(" "),a("td",[t._v("16777215")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("INT")])]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("-2147483648")]),t._v(" "),a("td",[a("code",[t._v("0")])]),t._v(" "),a("td",[a("code",[t._v("2147483647")])]),t._v(" "),a("td",[a("code",[t._v("4294967295")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("BIGINT")])]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("-2^63^")]),t._v(" "),a("td",[a("code",[t._v("0")])]),t._v(" "),a("td",[t._v("2^63^-1")]),t._v(" "),a("td",[t._v("2^64^-1")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-2-显示宽度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-显示宽度"}},[t._v("#")]),t._v(" 1.2 显示宽度")]),t._v(" "),a("p",[t._v("通过整数类型关键字后面的括号内的整数值，可以指定该字段的最大显示宽度，如 int(8) 表示最大有效显示宽度为8。")]),t._v(" "),a("p",[t._v("显示宽度有两个作用：")]),t._v(" "),a("p",[t._v("（1）对齐填充")]),t._v(" "),a("p",[t._v("当整型字段的值的实际个数小于指定显示宽度时，会由空格从左侧填满宽度。")]),t._v(" "),a("p",[t._v("（2）限制位数")]),t._v(" "),a("p",[t._v("只能插入位数小于显示宽度的值")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TINYINT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SMALLINT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MEDIUMINT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BIGINT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TINYINT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 建表")]),t._v("\nQuery OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rows")]),t._v(" affected "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.30")]),t._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("desc")]),t._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看默认显示宽度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------+---------------------+------+-----+---------+-------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Field "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Type")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("Null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Extra "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------+---------------------+------+-----+---------+-------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" a     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tinyint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" YES  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" b     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("smallint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" YES  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" c     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mediumint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" YES  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" d     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" YES  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" e     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" YES  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" f     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tinyint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" YES  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------+---------------------+------+-----+---------+-------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rows")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 有符号，长度等于显示宽度，无法插入")]),t._v("\nERROR "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1264")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22003")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Out")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" range "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" at "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("row")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 有符号，长度小于显示宽度，可插入")]),t._v("\nQuery OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("row")]),t._v(" affected "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),t._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 无符号，长度等于显示宽度，无法插入")]),t._v("\nERROR "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1264")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22003")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Out")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" range "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),t._v(" at "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("row")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("h2",{attrs:{id:"_2-浮点数类型和定点数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-浮点数类型和定点数类型"}},[t._v("#")]),t._v(" 2.浮点数类型和定点数类型")]),t._v(" "),a("p",[t._v("MySQL中使用浮点数和定点数表示小数。")]),t._v(" "),a("p",[t._v("浮点类型有两种：单精度浮点类型（FLOAT）和双精度浮点类型（DOUBLE）。定点类型只有一种：DECIMAL。")]),t._v(" "),a("p",[t._v("浮点类型和定点类型都可以用（M，D）来表示，其中M称为精度，表示总共的位数；D称为标度，表示小数的位数。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("MySQL数据类型")])]),t._v(" "),a("th",[t._v("存储需求")]),t._v(" "),a("th",[a("strong",[t._v("含义")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("float(m,d)")]),t._v(" "),a("td",[t._v("4字节")]),t._v(" "),a("td",[t._v("单精度浮点型  m总个数，d小数位")])]),t._v(" "),a("tr",[a("td",[t._v("double(m,d)")]),t._v(" "),a("td",[t._v("8字节")]),t._v(" "),a("td",[t._v("双精度浮点型  m总个数，d小数位")])]),t._v(" "),a("tr",[a("td",[t._v("DECIMAL(M,D)")]),t._v(" "),a("td",[t._v("M+2个字节")]),t._v(" "),a("td",[t._v("压缩的“严格”定点数")])])])]),t._v(" "),a("p",[t._v("注意：")]),t._v(" "),a("p",[t._v("（1）不论是定点类型还是浮点类型，如果用户指定的精度值超过精度范围，则会进行四舍五入的处理。")]),t._v(" "),a("p",[t._v("（2）在MySQL中，在对精度要求比较高的时候（如货币、科学数据等），尽量选择使用DECIMAL类型。另外，两个浮点数在进行减法和比较运算的时候容易出问题，因此在使用浮点数类型时需要注意，并尽量避免做浮点数比较。")]),t._v(" "),a("p",[t._v("（3）DECIMAL 类型的数据当插入的小数部分有多余的位数，截断后插入数据库；当插入的整数部分的值超过了其表示范围则不会插入到数据库。")]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FLOAT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DOUBLE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECIMAL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.26")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.234")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h1",{attrs:{id:"二、日期和时间类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、日期和时间类型"}},[t._v("#")]),t._v(" 二、日期和时间类型")]),t._v(" "),a("p",[t._v('每个时间类型有一个有效值范围和一个"零"值，当指定不合法的MySQL不能表示的值时使用"零"值。')]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("大小 (字节)")]),t._v(" "),a("th",[t._v("范围")]),t._v(" "),a("th",[t._v("格式")]),t._v(" "),a("th",[t._v("用途")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("DATE")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("1000-01-01~9999-12-31")]),t._v(" "),a("td",[t._v("YYYY-MM-DD")]),t._v(" "),a("td",[t._v("日期值")])]),t._v(" "),a("tr",[a("td",[t._v("TIME")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("'-838:59:59'~'838:59:59'")]),t._v(" "),a("td",[t._v("HH:MM:SS")]),t._v(" "),a("td",[t._v("时间值或持续时间")])]),t._v(" "),a("tr",[a("td",[t._v("YEAR")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("1901~2155")]),t._v(" "),a("td",[t._v("YYYY")]),t._v(" "),a("td",[t._v("年份值")])]),t._v(" "),a("tr",[a("td",[t._v("DATETIME")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("1000-01-01 00:00:00~9999-12-31 23:59:59")]),t._v(" "),a("td",[t._v("YYYY-MM-DD HH:MM:SS")]),t._v(" "),a("td",[t._v("混合日期和时间值")])]),t._v(" "),a("tr",[a("td",[t._v("TIMESTAMP")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("1970-01-01 00:00:00~2037 年某时")]),t._v(" "),a("td",[t._v("YYYYMMDD HHMMSS")]),t._v(" "),a("td",[t._v("混合日期和时间值，时间戳")])])])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" t3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("YEAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2015")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' 2015'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" a    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2015")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2015")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rows")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" t3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2288'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nERROR "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1264")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22003")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Out")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" range "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" at "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("row")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("由上述结果可看出：")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("插入值无论是数值型还是字符串型，都可以被正确地存储到数据库中；")]),t._v(" "),a("li",[t._v("但是假如插入值超过了YEAR类型的取值范围，则插入失败。")])])]),t._v(" "),a("p",[t._v("TIMESTAMP 和 DATATIME 除了存储字节和支持的范围不同外，还有一个最大的区别就是：")]),t._v(" "),a("blockquote",[a("ul",[a("li",[a("p",[t._v("DATETIME 在存储日期数据时，按实际输入的格式存储，即输入什么就存储什么，与时区无关；")])]),t._v(" "),a("li",[a("p",[t._v("而 TIMESTAMP 值的存储是以 UTC （世界标准时间）格式保存的，存储时对当前时区进行转换，检索时再转换回当前时区。即查询时，根据当前时区的不同，显示的时间值是不同的。")])])])]),t._v(" "),a("h1",{attrs:{id:"三、字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、字符串类型"}},[t._v("#")]),t._v(" 三、字符串类型")]),t._v(" "),a("h2",{attrs:{id:"_1-文本字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-文本字符串"}},[t._v("#")]),t._v(" 1.文本字符串")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("大小")]),t._v(" "),a("th",[t._v("用途")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("CHAR")]),t._v(" "),a("td",[t._v("0-255字节")]),t._v(" "),a("td",[t._v("定长字符串")])]),t._v(" "),a("tr",[a("td",[t._v("VARCHAR")]),t._v(" "),a("td",[t._v("0-65535 字节")]),t._v(" "),a("td",[t._v("变长字符串")])]),t._v(" "),a("tr",[a("td",[t._v("TINYTEXT")]),t._v(" "),a("td",[t._v("0-255字节")]),t._v(" "),a("td",[t._v("短文本字符串")])]),t._v(" "),a("tr",[a("td",[t._v("TEXT")]),t._v(" "),a("td",[t._v("0-65 535字节")]),t._v(" "),a("td",[t._v("长文本数据")])]),t._v(" "),a("tr",[a("td",[t._v("MEDIUMTEXT")]),t._v(" "),a("td",[t._v("0-16 777 215字节")]),t._v(" "),a("td",[t._v("中等长度文本数据")])]),t._v(" "),a("tr",[a("td",[t._v("LONGTEXT")]),t._v(" "),a("td",[t._v("0-4 294 967 295字节")]),t._v(" "),a("td",[t._v("极大文本数据")])]),t._v(" "),a("tr",[a("td",[t._v("ENUM")]),t._v(" "),a("td",[t._v("枚举类型，只能存一个枚举字符串值")]),t._v(" "),a("td",[t._v("1或2个字节，取决于枚举值的数目（最大值65535）")])]),t._v(" "),a("tr",[a("td",[t._v("SET")]),t._v(" "),a("td",[t._v("一个设置，字符串对象可以有零个或多个 SET 成员")]),t._v(" "),a("td",[t._v("1、2、3、4或8个字节，取决于集合成员的数量（最多64个成员）")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-1-char-和-varchar-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-char-和-varchar-类型"}},[t._v("#")]),t._v(" 1.1 CHAR 和 VARCHAR 类型")]),t._v(" "),a("ul",[a("li",[t._v("CHAR(M) 为固定长度字符串，VARCHAR(M) 是长度可变的字符串.")]),t._v(" "),a("li",[t._v("CHAR 是固定长度，所以它的处理速度比 VARCHAR 的速度快，但是确定是浪费空间。")]),t._v(" "),a("li",[t._v("当检索 CHAR 值时，尾部的空格将被删除掉。VARCHAR 在值保存和检索时尾部的空格仍保留。")]),t._v(" "),a("li",[a("strong",[t._v("字符串类型的 M 值是存储的最大字节数，不是显示宽度，如果插入的字符超过了 M 值，则不允许插入。不要与整数类型的 M 值搞混。")])])]),t._v(" "),a("h3",{attrs:{id:"_1-2-text-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-text-类型"}},[t._v("#")]),t._v(" 1.2 TEXT 类型")]),t._v(" "),a("p",[t._v("TEXT 类型保存非二进制字符串，如文章内容、评论等，当保存或查询 TEXT 列的值时，不删除尾部空格。")]),t._v(" "),a("h3",{attrs:{id:"_1-3-enum-类型和-set-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-enum-类型和-set-类型"}},[t._v("#")]),t._v(" 1.3 ENUM 类型和 SET 类型")]),t._v(" "),a("p",[t._v("ENUM 与SET 都是枚举类型，不同的是，ENUM 字段只能从定义的列值中选择一个值插入，而 SET 类型的列可从定义的列值中选择多个字符的联合。")]),t._v(" "),a("h2",{attrs:{id:"_2-二进制字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-二进制字符串"}},[t._v("#")]),t._v(" 2.二进制字符串")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类型名称")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("存储需求")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("BIT(M)")]),t._v(" "),a("td",[t._v("位字段类型")]),t._v(" "),a("td",[t._v("大约(M+7)/8个字节")])]),t._v(" "),a("tr",[a("td",[t._v("BINARY(M)")]),t._v(" "),a("td",[t._v("固定长度二进制字符串")]),t._v(" "),a("td",[t._v("M个字节")])]),t._v(" "),a("tr",[a("td",[t._v("VARBINARY(M)")]),t._v(" "),a("td",[t._v("可变长度二进制字符串")]),t._v(" "),a("td",[t._v("M+1个字节")])]),t._v(" "),a("tr",[a("td",[t._v("TINYBLOB(M)")]),t._v(" "),a("td",[t._v("非常小的BLOB")]),t._v(" "),a("td",[t._v("L+1个字节，L<2^8")])]),t._v(" "),a("tr",[a("td",[t._v("BLOB(M)")]),t._v(" "),a("td",[t._v("小的BLOB")]),t._v(" "),a("td",[t._v("L+2个字节，L<2^16")])]),t._v(" "),a("tr",[a("td",[t._v("MEDIUMBLOB(M)")]),t._v(" "),a("td",[t._v("中等大小的BLOB")]),t._v(" "),a("td",[t._v("L+3个字节，L<2^24")])]),t._v(" "),a("tr",[a("td",[t._v("LONGBLOB(M)")]),t._v(" "),a("td",[t._v("非常大的的BLOB")]),t._v(" "),a("td",[t._v("L+4个字节，L<2^32")])])])]),t._v(" "),a("p",[t._v("BLOB 是二进制字符串，TEXT 是非二进制字符串，两者均可存放大容量的信息。")]),t._v(" "),a("p",[t._v("BLOB 主要存储图片、音频信息等，而 TEXT 只能存储纯文本文件。")]),t._v(" "),a("p",[t._v("但由于现在图片和音频越来越多，检索起来也不方便，所以都不放在数据库，一般放在专门的文件存储服务器上。")]),t._v(" "),a("h1",{attrs:{id:"四、如何选择数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、如何选择数据类型"}},[t._v("#")]),t._v(" 四、如何选择数据类型")]),t._v(" "),a("p",[t._v("MySQL提供了大量的数据类型，为了优化存储，提高数据库性能，在不同情况下应使用"),a("strong",[t._v("最精确")]),t._v("的类型。在选择数据类型时，在可以表示该字段值的所有类型中，应当使用"),a("strong",[t._v("占用存储空间最少")]),t._v("的数据类型。")]),t._v(" "),a("p",[t._v("因为这样不仅可以减少存储（内存、磁盘）空间，从而节省I/O资源（检索相同数据情况下）；还可以在数据计算的时候减轻CPU负载。")]),t._v(" "),a("h2",{attrs:{id:"_1-整数和浮点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-整数和浮点数"}},[t._v("#")]),t._v(" 1. 整数和浮点数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果插入的数据不需要小数部分，则使用整数类型存储数据；如果需要小数部分，则使用浮点数类型。")]),t._v(" "),a("blockquote",[a("p",[t._v("例如，如果字段取值范围在1～50000，选择SMALLINTUNSIGNED是最好的；假如需要存储带有小数位的值如3.1415926，则需选择浮点数类型。")])])]),t._v(" "),a("li",[a("p",[t._v("浮点类型包括FLOAT和DOUBLE类型，DOUBLE类型精度比FLOAT高。因此，需要存储精度较高时，需选择DOUBLE类型。")])])]),t._v(" "),a("h2",{attrs:{id:"_2-浮点数和定点数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-浮点数和定点数"}},[t._v("#")]),t._v(" 2. 浮点数和定点数")]),t._v(" "),a("p",[t._v("浮点型FLOAT和DOUBLE与定点型DECIMAL的不同点是：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("数据范围")]),t._v("：在长度固定的情况下，浮点型能表示的数据范围更大。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("精度")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("当一个字段被定义为浮点类型后，如果插入数据的精度超过该列定义的实际精度，则插入值会被四舍五入到实际定义的精度值，然后插入，四舍五入的过程不会报错。由于浮点型容易因四舍五入产生误差，因此对于精确度要求比较高时，要使用定点型DECIMAL来存储。")]),t._v(" "),a("li",[t._v("定点数实际上是以字符串形式存放的，所以定点数可以更精确地保存数据。如果实际插入的数值精度大于实际定义的精度，则MySQL会进行警告（默认的SQLMode下），但是数据按照实际精度四舍五入后插入；如果SQLMode是在TRADITIONAL（传统模式）下，则系统会直接报错，导致数据无法插入。")])])])]),t._v(" "),a("p",[a("strong",[t._v("数据迁移")]),t._v("：在数据迁移中，FLOAT(M,D)是非标准SQL定义，数据迁移可能出现问题，最好不要使用。")]),t._v(" "),a("p",[a("strong",[t._v("数值比较")]),t._v("：另外，两个浮点型数据进行减法和比较运算时也容易出问题，因此在进行计算的时候，一定要注意，如果要进行数值比较，最好使用定点型DECIMAL。")]),t._v(" "),a("h2",{attrs:{id:"_3-日期和时间类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-日期和时间类型"}},[t._v("#")]),t._v(" 3. 日期和时间类型")]),t._v(" "),a("p",[t._v("MySQL中选择日期类型的原则如下。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("根据实际需要选择能够满足应用的"),a("strong",[t._v("最小存储")]),t._v("的日期类型。")]),t._v(" "),a("blockquote",[a("p",[t._v("如果应用只需要记录“年份”，那么用1个字节来存储的YEAR类型完全能够满足，而不需要用4个字节来存储的DATE类型。这样不仅仅能节约存储，更能够提高表的操作效率。")])])]),t._v(" "),a("li",[a("p",[t._v("如果要记录年月日时分秒，并且记录的年份比较久远，那么最好使用DATETIEM，而不要使用TIMESTAMP。因为TIMESTAMP表示的"),a("strong",[t._v("日期范围")]),t._v("比DATETIME要短得多。")])]),t._v(" "),a("li",[a("p",[t._v("如果记录的日期需要让"),a("strong",[t._v("不同时区")]),t._v("的用户使用，那么最好使用TIMESTAMP，因为日期类型中只有它能够和实际时区相对应。而且当插入一条记录时没有指定TIMESTAMP这个字段值的话，MySQL会把TIMESTAMP字段设为当前的时间。因此当需要在插入记录的同时插入当前时间时，使用TIMESTAMP比较方便。")])])]),t._v(" "),a("h2",{attrs:{id:"_4-字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-字符串类型"}},[t._v("#")]),t._v(" 4. 字符串类型")]),t._v(" "),a("h3",{attrs:{id:"_4-1-char和varchar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-char和varchar"}},[t._v("#")]),t._v(" 4.1 CHAR和VARCHAR")]),t._v(" "),a("p",[t._v("CHAR和VARCHAR类型类似，都用来存储字符串，但它们"),a("strong",[t._v("保存和检索的方式不同")]),t._v("。")]),t._v(" "),a("ul",[a("li",[t._v("CHAR属于固定长度的字符类型，而VARCHAR属于可变长度的字符类型。CHAR会自动删除插入数据的"),a("strong",[t._v("尾部空格")]),t._v("，VARCHAR不会删除尾部的空格。")]),t._v(" "),a("li",[t._v("由于CHAR是固定长度的，所以它的处理速度比VARCHAR快得多，但是其缺点是浪费存储空间，程序需要对行尾空格进行处理，所以对于那些"),a("strong",[t._v("长度变化不大且对查询速度有较高要求的数据可以考虑用CHAR类型来存储")]),t._v("。")])]),t._v(" "),a("p",[t._v("另外，在MySQL中，"),a("strong",[t._v("不同的存储引擎对CHAR和VARCHAR的使用原则有所不同")]),t._v("，概括如下。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("MyISAM存储引擎")]),t._v("：建议使用固定长度的数据列代替可变长度的数据列。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("MEMORY存储引擎")]),t._v("：目前都使用固定长度的数据行存储，因此无论使用CHAR或VARCHAR列都没有关系，两者都是作为CHAR类型处理。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("InnoDB存储引擎")]),t._v("：建议使用VARCHAR类型。对于InnoDB数据表，内部的行存储格式没有区分固定长度和可变长度列（所有数据行都使用指向数据列值的头指针），因此在本质上，使用固定长度的CHAR列不一定比使用可变长度VARCHAR列性能要好。因此，主要的性能因素是数据行使用的存储总量。由于CHAR平均占用的空间多于VARCHAR，因此使用VARCHAR来最小化需要处理的数据行的存储总量和磁盘I/O是比较好的。")])])]),t._v(" "),a("h3",{attrs:{id:"_4-2-enum和sete"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-enum和sete"}},[t._v("#")]),t._v(" 4.2 ENUM和SETE")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("NUM只能取单值，它的数据列表是一个枚举集合。它的合法取值列表最多允许有65535个成员。因此，在需要从多个值中选取一个时，可以使用ENUM。")]),t._v(" "),a("blockquote",[a("p",[t._v("例如，性别字段适合定义为ENUM类型，每次只能从“男”和“女”中取一个值。")])])]),t._v(" "),a("li",[a("p",[t._v("SET可以取多个值。它的合法取值列表最多允许有64个成员。空字符串也是一个合法的SET值。因此，在需要取多个值的时候，适合使用SET类型。")]),t._v(" "),a("blockquote",[a("p",[t._v("例如，要存储一个人的特长，最好使用SET类型。ENUM和SET的值是以字符串形式出现的，但在MySQL内部，实际是以数值索引的形式存储它们。")])])])]),t._v(" "),a("h3",{attrs:{id:"_4-3-blob和text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-blob和text"}},[t._v("#")]),t._v(" 4.3 BLOB和TEXT")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一般保存少量字符串的时候，可以选择CHAR或者VARCHAR")])]),t._v(" "),a("li",[a("p",[t._v("而在保存大文本时，通常会选择使用TEXT或者BLOB，二者之间的主要差别是BLOB能用来保存"),a("strong",[t._v("二进制数据")]),t._v("，比如照片、音频信息等；而TEXT只能保存"),a("strong",[t._v("字符数据")]),t._v("，比如一篇文章或者日记。")])])]),t._v(" "),a("p",[t._v("以下是BLOB与TEXT存在的一些常见的问题：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("碎片整理")]),t._v("：BLOB和TEXT值会引起一些性能问题，特别是执行了大量的删除操作时。删除操作会在数据表中留下很大的“空洞”，以后填入这些“空洞”的记录在插入的性能上会有影响。为了提高性能，建议定期使用 "),a("code",[t._v("OPTIMIZE TABLE")]),t._v(" 功能对这类表进行碎片整理，避免因为“空洞”导致性能问题。")])]),t._v(" "),a("li",[a("p",[t._v("使用合成的（Synthetic）索引来提高大文本字段（BLOB或TEXT）的查询性能。")])]),t._v(" "),a("li",[a("p",[t._v("在不必要的时候避免检索大型的BLOB或TEXT值。")]),t._v(" "),a("blockquote",[a("p",[t._v("例如，SELECT*查询就不是很好的想法，除非能够确定作为约束条件的WHERE子句只会找到所需要的数据行，否则，很可能毫无目的地在网络上传输大量的值。")])])]),t._v(" "),a("li",[a("p",[t._v("把BLOB或TEXT列分离到单独的表中。")]),t._v(" "),a("blockquote",[a("p",[t._v("在某些环境中，如果把这些数据列移动到到第二张数据表中，可以把原数据表中的数据列转换为固定长度的数据行格式，那么它就是有意义的。这会减少主表中的碎片，可以得到固定长度数据行的性能优势。它还可以使主数据表在运行SELECT*查询的时候不会通过网络传输大量的BLOB或TEXT值。")])])])]),t._v(" "),a("h1",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://www.w3cschool.cn/mysql/mysql-data-types.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL 数据类型--w3cschool"),a("OutboundLink")],1)]),t._v(" "),a("li")])])}),[],!1,null,null,null);s.default=e.exports}}]);